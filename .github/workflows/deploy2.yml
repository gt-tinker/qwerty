name: Deploy Tests Better
on:
  workflow_dispatch:
  release:
    types: [published]
jobs:
  linux_x86:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Install build dependencies
        run: sudo apt install -y ninja-build python3-dev libffi-dev libzstd-dev libtinfo-dev
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install python dependencies
        run: python -m pip install --upgrade pip setuptools
      - name: Clone Tweedledum
        uses: actions/checkout@v4
        with:
          repository: ausbin/tweedledum
          ref: qwerty
          path: tpls/tweedledum
      - name: Clone QIR-Runner
        uses: actions/checkout@v4
        with:
          repository: gt-tinker/qir-runner
          ref: qwerty
          path: tpls/qir-runner
          ssh-key:  ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Clone gtest
        uses: actions/checkout@v4
        with:
          repository: google/googletest
          ref: d83fee138a9ae6cb7c03688a2d08d4043a39815d
          path: tpls/googletest
      - name: Setting up LLVM and MLIR
        run: |
          wget https://junk.ausb.in/qwerty/llvm_mlir_rel_v19_1_6_x86_linux.tar.xz
          tar -xJvf llvm_mlir_rel_v19_1_6_x86_linux.tar.xz
          echo "$GITHUB_WORKSPACE/llvm19/bin" >> $GITHUB_PATH
      - name: Make and install wheel
        run: |
          export MLIR_DIR="$GITHUB_WORKSPACE/llvm19/lib/cmake/mlir"
          export CMAKE_GENERATOR=Ninja
          export QWERTY_BUILD_TESTS=true
          python3 -m venv venv
          . venv/bin/activate
          pip wheel -v .
          pip install *.whl
      - name: Run tests in the virtual environment
        run: |
          . venv/bin/activate
          pip install numpy
          test/run-tests.sh
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.whl
  macos_m1:
    runs-on: macos-14

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Install build dependencies
        run: brew install ninja cmake
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install python dependencies
        run: python -m pip install --upgrade pip setuptools
      - name: Clone Tweedledum
        uses: actions/checkout@v4
        with:
          repository: ausbin/tweedledum
          ref: qwerty
          path: tpls/tweedledum
      - name: Clone QIR-Runner
        uses: actions/checkout@v4
        with:
          repository: gt-tinker/qir-runner
          ref: qwerty
          path: tpls/qir-runner
          ssh-key:  ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Clone gtest
        uses: actions/checkout@v4
        with:
          repository: google/googletest
          ref: d83fee138a9ae6cb7c03688a2d08d4043a39815d
          path: tpls/googletest
      - name: Setting up LLVM and MLIR
        run: |
          wget https://junk.ausb.in/qwerty/llvm_mlir_rel_v19_1_6_aarch64_macos.tar.xz
          tar -xJvf llvm_mlir_rel_v19_1_6_aarch64_macos.tar.xz
          echo "$GITHUB_WORKSPACE/llvm19/bin" >> $GITHUB_PATH
      - name: Make and install wheel
        run: |
          export MLIR_DIR="$GITHUB_WORKSPACE/llvm19/lib/cmake/mlir"
          export CMAKE_GENERATOR=Ninja
          export QWERTY_BUILD_TESTS=true
          python3 -m venv venv
          . venv/bin/activate
          pip wheel -v .
          pip install *.whl
      - name: Run tests in the virtual environment
        run: |
          . venv/bin/activate
          pip install numpy
          test/run-tests.sh
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.whl
  windows:
    runs-on: windows-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install python dependencies
        run: python -m pip install --upgrade pip setuptools
      - name: Clone Tweedledum
        uses: actions/checkout@v4
        with:
          repository: ausbin/tweedledum
          ref: qwerty
          path: tpls/tweedledum
      - name: Clone QIR-Runner
        uses: actions/checkout@v4
        with:
          repository: gt-tinker/qir-runner
          ref: qwerty
          path: tpls/qir-runner
          ssh-key:  ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Clone gtest
        uses: actions/checkout@v4
        with:
          repository: google/googletest
          ref: d83fee138a9ae6cb7c03688a2d08d4043a39815d
          path: tpls/googletest
      - name: Setting up LLVM and MLIR
        run: |
          Invoke-WebRequest https://junk.ausb.in/qwerty/llvm_mlir_rel_v19_1_6_x86_windows.zip -OutFile llvm_mlir_rel_v19_1_6_x86_windows.zip
          Expand-Archive -Path llvm_mlir_rel_v19_1_6_x86_windows.zip -DestinationPath .
          Add-Content -Path $Env:GITHUB_PATH -Value "$Env:GITHUB_WORKSPACE\llvm19\bin"
      - name: Set up Visual Studio environment variables
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - name: Make and install wheel
        shell: pwsh
        run: |
          $Env:MLIR_DIR = "$Env:GITHUB_WORKSPACE\llvm19\lib\cmake\mlir"
          $Env:CMAKE_GENERATOR = "Ninja"
          $Env:QWERTY_BUILD_TESTS = "true"
          python3 -m venv venv
          venv\Scripts\Activate.ps1
          pip wheel -v .
          pip install (Get-ChildItem *.whl)
      - name: Run tests in the virtual environment
        run: |
          venv\Scripts\Activate.ps1
          pip install numpy
          test\run-tests.bat
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.whl
